The \"current AUM\" can be obtained from the model analytics.lending_portfolio_summary_facility joined with analytics.lending_portfolio_monthly_facility using facility_id. The relevant query used frequently is:\n\n```sql\nwith t1 as\n(\nselect \n  distinct on (facility_id,rff_id)\n  facility_id,\n  rff_id,\n  op_date,\n  principal_receivable,\n  principal_receivable_till_date,\n  int_receivable,\n  fee_receivable\nfrom lms.lms_closing_balance \nwhere is_active='true'\norder by 1,2,3 desc\n),\nt2 as\n(\nselect \n  round(sum(principal_receivable + int_receivable + fee_receivable) / 10^7::numeric, 2) as current_month_aum\nfrom t1\n)\nselect current_month_aum as \"Current AUM\" from t2\n```\n\nAlternatively, a common approach is summing total_receivable from lending_portfolio_summary_facility:\n\n```sql\nselect \n  coalesce(sum(total_receivable),0) as \"Current AUM\"\nfrom analytics.lending_portfolio_summary_facility\n```\n\nOr joining with monthly data for latest month AUM:\n\n```sql\nwith t1 as\n(\nselect \n  lpsf.seller_name,\n  lpsf.seller_gstin,\n  lpsf.anchor_name,\n  coalesce(sum(lpsf.total_receivable),0) as \"Current AUM\"\nfrom analytics.lending_portfolio_summary_facility lpsf\ngroup by \n  lpsf.seller_name,\n  lpsf.seller_gstin,\n  lpsf.anchor_name\n)\nselect sum(\"Current AUM\") as total_current_aum from t1\n```\n\nChoose one depending on level of granularity required; the first query gives a total portfolio AUM in crores (divided by 10^7) and is efficient and correct per warehouse schema and typical metabase use.\n\nLet me know if you want the query tailored by any filters like industry, anchor, or month etc.Ë€